Test cases for 0-add_integer module
===================================

The 0-add_integer module adds two integers or floats

Import the function:
    >>> add_integer = __import__('0-add_integer').add_integer

Test basic addition with integers:
    >>> add_integer(1, 2)
    3
    >>> add_integer(100, -2)
    98
    >>> add_integer(-5, -5)
    -10

Test using default value for b (98):
    >>> add_integer(2)
    100

Test float conversion:
    >>> add_integer(100.3, -2)
    98
    >>> add_integer(3.7, 4.3)
    7

Test type validation for parameter a:
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>> add_integer("Hello")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test type validation for parameter b:
    >>> add_integer(4, "School")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Test edge cases:
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
    
    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
    